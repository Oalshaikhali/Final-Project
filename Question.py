


class Question:
    
    question_prompts = [

        "\nWho developed Python Programming Language?\na) Wick van Rossum\nb) Rasmus Lerdorf\nc) Guido van Rossum\nd) Niene Stom\n\n",
        "\nWhich type of Programming does Python support?\na) object-oriented programming\nb) structured programming\nc) functional programming\nd) all of the mentioned\n\n",
        "\nIs Python case sensitive when dealing with identifiers?\na) no\nb) yes\nc) machine dependent\nd) none of the mentioned\n\n",
        "\nWhich of the following is the correct extension of the Python file?\na) .python\nb) .pl\nc) .py\nd) .p\n\n",
        "\nIs Python code compiled or interpreted?\na) Python code is both compiled and interpreted\nb) Python code is neither compiled nor interpreted\nc) Python code is only compiled\nd) Python code is only interpreted\n\n",
        "\nAll keywords in Python are in _________\na) Capitalized\nb) lower case\nc) UPPER CASE\nd) None of the mentioned\n\n",
        "\nWhich of the following is used to define a block of code in Python language?\na) Indentation\nb) Key\nc) Brackets\nd) All of the mentioned\n\n",
        "\nWhich keyword is used for function in Python language?\na) Function\nb) Def\nc) Fun\nd) Define\n\n",
        "\nWhich of the following character is used to give single-line comments in Python?\na) //\nb) #\nc) !\nd) /*\n\n",
        "\nWhich of the following functions can help us to find the version of python that we are currently working on?\na) sys.version(1)\nb) sys.version(0)\nc) sys.version()\nd) sys.version\n\n",
        "\nPython supports the creation of anonymous functions at runtime, using a construct called __________\na) pi\nb) anonymous\nc) lambda\nd) none of the mentioned\n\n",
        "\nWhat is the order of precedence in python?\na) Exponential, Parentheses, Multiplication, Division, Addition, Subtraction\nb) Exponential, Parentheses, Division, Multiplication, Addition, Subtraction\nc) Parentheses, Exponential, Multiplication, Division, Subtraction, Addition\nd) Parentheses, Exponential, Multiplication, Division, Addition, Subtraction\n\n",
        "\nWhat does pip stand for python?\na) unlimited length\nb) all private members must have leading and trailing underscores\nc) Preferred Installer Program\nd) none of the mentioned\n\n",
        "\nWhich of the following is true for variable names in Python?\na) underscore and ampersand are the only two special characters allowed\nb) unlimited length\nc) all private members must have leading and trailing underscores\nd) none of the mentioned\n\n",
        "\nWhich of the following is the truncation division operator in Python?\na) |\nb) //\nc) /\nd) %\n\n",
        "\nWhich of the following functions is a built-in function in python?\na) factorial()\nb) print()\nc) seed()\nd) sqrt()\n\n",
        "\nWhich of the following is the use of id() function in python?\na) Every object doesn’t have a unique id\nb) Id returns the identity of the object\nc) All of the mentioned\nd) None of the mentioned\n\n",
        "\nWhich of the following is not a core data type in Python programming?\na) Tuples\nb) Lists\nc) Class\nd) Dictionary\n\n",
        "\nWhich of these is the definition for packages in Python?\na) A set of main modules\nb) A folder of python modules\nc) A number of files containing Python definitions and statements\nd) A set of programs making use of Python modules\n\n",
        "\nWhich one of the following is not a keyword in Python language?\na) pass\nb) eval\nc) assert\nd) nonlocal\n\n",
        "\nWhich module in the python standard library parses options received from the command line?\na) getarg\nb) getopt\nc) main\nd) os\n\n",
        "\nWhich of the following statements is used to create an empty set in Python?\na) ( )\nb) [ ]\nc) { }\nd) set()\n\n",
        "\nWhat arithmetic operators cannot be used with strings in Python?\na) *\nb) –\nc) +\nd) All of the mentioned\n\n",
        "\nTo add a new element to a list we use which Python command?\na) list1.addEnd(5)\nb) list1.addLast(5)\nc) list1.append(5)\nd) list1.add(5)\n\n",
        "\nWhat will be the output of the following Python code?\n\n>>>list1 = [1, 3]\n>>>list2 = list1\n>>>list1[0] = 4\n>>>print(list2)\n\na) [1, 4]\nb) [1, 3, 4]\nc) [4, 3]\nd) [1, 3]\n\n",
        "\nWhich of the following Python statements will result in the output: 6?\n\nA = [[1, 2, 3],\n[4, 5, 6],\n[7, 8, 9]]\n\na) A[2][1]\nb) A[1][2]\nc) A[3][2]\nd) A[2][3]\n\n",
        "\nWhich one of the following is the use of function in python?\na) Functions don’t provide better modularity for your application\nb) you can’t also create your own functions\nc) Functions are reusable pieces of programs\nd) All of the mentioned\n\n",
        "\nWhat is the maximum possible length of an identifier in Python?\na) string.ascii_lowercase_string.digits\nb) string.ascii_lowercase+string.ascii_uppercase\nc) string.letters\nd) string.lowercase_string.uppercase\n\n",
        "\nWhat are the two main types of functions in Python?\na) System function\nb) Custom function\nc) Built-in function & User defined function\nd) User function\n\n",
        "\nWhich of the following is a Python tuple?\na) {1, 2, 3}\nb) {}\nc) [1, 2, 3]\nd) (1, 2, 3)\n\n",
        '\nWhat will be the output of the following Python code?\n\nprint(" abc. DEF ".capitalize())\n\na) Abc. def\nb) abc. def\nc) Abc. Def\nd) ABC. DEF\n\n',
        "\nWhat will be the output of the following Python expression?\n\nround(4.576)\n\na) 4\nb) 4.6\nc) 5\nd) 4.5\n\n",
        "\nWhat is output of print(math.pow(3, 2))?\na) 9.0\nb) None\nc) 9\nd) None of the mentioned\n\n",
        "\nWhat is the answer to this expression, 22 % 3 is?\na) 7\nb) 1\nc) 0\nd) 5\n\n",
        "\nOperators with the same precedence are evaluated in which manner?\na) Left to Right\nb) Right to Left\nc) Can’t say\nd) None of the mentioned\n\n",
        "\nWhich one of the following has the same precedence level?\na) Addition and Subtraction\nb) Multiplication, Division and Addition\nc) Multiplication, Division, Addition and Subtraction\nd) Addition and Multiplication\n\n",
        "\nWhich one of the following has the highest precedence in the expression?\na) Exponential\nb) Addition\nc) Multiplication\nd) Parentheses\n\n",
        "\nIs Python case sensitive when dealing with identifiers?\na) yes\nb) no\nc) machine dependent\nd) none of the mentioned\n\n",
        "\nThe output of executing string.ascii_letters can also be achieved by?\na) 31 characters\nb) 63 characters\nc) 79 characters\nd) none of the mentioned\n\n",
        "\nWhich of the following is an invalid variable?\na) my_string_1\nb) 1st_string\nc) foo\nd) _\n\n",
        "\nWhy are local variable names beginning with an underscore discouraged?\na) they are used to indicate a private variables of a class\nb) they confuse the interpreter\nc) they are used to indicate global variables\nd) they slow down execution\n\n",
        "\nAll keywords in Python are in _________\na) lower case\nb) UPPER CASE\nc) Capitalized\nd) None of the mentioned\n\n",
        "\nWhich of the following is not a keyword?\na) eval\nb) assert\nc) nonlocal\nd) pass\n\n",
        "\nWhich of the following is true for variable names in Python?\na) unlimited length\nb) all private members must have leading and trailing underscores\nc) underscore and ampersand are the only two special characters allowed\nd) none of the mentioned\n\n",
        "\nWhich of the following is an invalid statement?\na) abc = 1,000,000\nb) a b c = 1000 2000 3000\nc) a,b,c = 1000, 2000, 3000\nd) a_b_c = 1,000,000\n\n",
        "\nWhich of the following cannot be a variable?\na) __init__\nb) in\nc) it\nd) on\n\n",
        "\nWhat is the type of inf?\na) Boolean\nb) Integer\nc) Float\nd) Complex\n\n",
        "\nWhat does ~4 evaluate to?\na) -5\nb) -4\nc) -3\nd) +3\n\n",
        "\nWhat is the result of cmp(3, 1)?\na) 1\nb) 0\nc) True\nd) False\n\n",
        "\nWhich of these in not a core data type?\na) Lists\nb) Dictionary\nc) Tuples\nd) Class\n\n"
    ]
    
    
    
    questions = [
        (question_prompts[0], "c"),
        (question_prompts[1], "d"),
        (question_prompts[2], "a"),
        (question_prompts[3], "c"),
        (question_prompts[4], "b"),
        (question_prompts[5], "d"),
        (question_prompts[6], "b"),
        (question_prompts[7], "a"),
        (question_prompts[8], "b"),
        (question_prompts[9], "b"),
        (question_prompts[10], "a"),
        (question_prompts[11], "c"),
        (question_prompts[12], "c"),
        (question_prompts[13], "b"),
        (question_prompts[14], "b"),
        (question_prompts[15], "b"),
        (question_prompts[16], "b"),
        (question_prompts[17], "c"),
        (question_prompts[18], "b"),
        (question_prompts[19], "b"),
        (question_prompts[20], "b"),
        (question_prompts[21], "d"),
        (question_prompts[22], "b"),
        (question_prompts[23], "c"),
        (question_prompts[24], "c"),
        (question_prompts[25], "b"),
        (question_prompts[26], "c"),
        (question_prompts[27], "b"),
        (question_prompts[28], "c"),
        (question_prompts[29], "d"),
        (question_prompts[30], "a"),
        (question_prompts[31], "c"),
        (question_prompts[32], "a"),
        (question_prompts[33], "b"),
        (question_prompts[34], "a"),
        (question_prompts[35], "a"),
        (question_prompts[36], "d"),
        (question_prompts[37], "a"),
        (question_prompts[38], "d"),
        (question_prompts[39], "b"),
        (question_prompts[40], "a"),
        (question_prompts[41], "d"),
        (question_prompts[42], "a"),
        (question_prompts[43], "a"),
        (question_prompts[44], "b"),
        (question_prompts[45], "b"),
        (question_prompts[46], "c"),
        (question_prompts[47], "a"),
        (question_prompts[48], "a"),
        (question_prompts[49], "d")
    ]

    score = 0


    